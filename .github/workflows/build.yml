#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#
# Copyright (C) 2022 Ing
#


name: Build OpenWrt

on:
  repository_dispatch:
  workflow_dispatch:


env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_SHELL: diy.sh
  TZ: Asia/Shanghai


jobs:
  build:
    name: Build OpenWrt
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@main
      
    - name: Init Env
      run : |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        sudo timedatectl set-timezone "Asia/Shanghai"

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
        sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true

        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git  libncurses-dev libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig rsync
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean

    - name: Clone source code
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /openwrt $GITHUB_WORKSPACE/openwrt

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SHELL
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_SHELL

    - name: Download package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s

        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > device_name
        [ -s device_name ] && echo "device_name=_$(cat device_name)" >> $GITHUB_ENV
        echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Organize files
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages *.buildinfo *.manifest *.bin
        sed -i '/buildinfo/d; /\.bin/d; /\.manifest/d' sha256sums
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        files: ${{ env.FIRMWARE }}/*

    #- name: Delete workflow runs
    #  uses: Mattraks/delete-workflow-runs@v2
    #  with:
    #    retain_days: 1
    #    keep_minimum_runs: 9

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      with:
        keep_latest: 9
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
